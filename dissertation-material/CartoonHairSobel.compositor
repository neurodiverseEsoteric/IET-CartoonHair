// This is the compositor script necessary for the image-space silhouette detection
compositor IETCartoonHair/SilhouetteCompositor
{
	technique
	{
		//create the textures we need for storing the various layers
		texture original target_width target_height PF_A8R8G8B8
		texture scene target_width target_height PF_A8R8G8B8
		texture edge target_width target_height PF_A8R8G8B8
		texture dilation target_width target_height PF_A8R8G8B8
		
		//get the original scene - this has all the other effects applied such as cartoon shading, hatching and so on
		target original
		{
			input previous
		}
		
		//re-render the scene using solid shaded to get cleaner edge detection
		target scene
		{
			input none
			pass clear
			{
			
			}
			
			//this tells the material listener to swap all object materials to a solid shaded technique
			material_scheme solid
			
			pass render_scene
			{
				
			}
		}

		//apply the sobel edge detection to the solid shaded scene to produce an edge image with a 1 pixel thick edge
		target edge
		{
			input none
			
			pass render_quad
			{
				material IETCartoonHair/Sobel
				input 0 scene
			}
		}
		
		//apply dilation to the edge image to increase the edge thickness
		target dilation
		{
			input none
			pass render_quad
			{
				material IETCartoonHair/Dilation
				input 0 edge
			}
		}
		
		//multiply the dilation and original scene buffers together to give us the final scene
		target_output
		{
			input none
			pass render_quad
			{
				material IETCartoonHair/Composite
				input 0 dilation
				input 1 original
			}
		}
		
		
	}
}